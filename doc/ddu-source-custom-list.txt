*ddu-source-custom-list.txt*     Custom list source for ddu.vim

Author : Masashi Iizuka <liquidz.uo+vim@gmail.com>
License: MIT LICENSE

==============================================================================
CONTENTS                                       *ddu-source-custom-list-contents*

Introduction    |ddu-source-custom-list-introduction|
Install         |ddu-source-custom-list-install|
Examples        |ddu-source-custom-list-examples|
Params          |ddu-source-custom-list-params|

==============================================================================
INTRODUCTION                               *ddu-source-custom-list-introduction*

Source for custom text list which is specified programatically.

==============================================================================
INSTALL                                         *ddu-source-custom-list-install*

ddu.vim and denops.vim are required.
- https://github.com/Shougo/ddu.vim
- https://github.com/vim-denops/denops.vim

==============================================================================
EXAMPLES                                       *ddu-source-custom-list-examples*

Configuration
>
  call ddu#custom#patch_global({
      \   'kindOptions': {
      \     'custom-list': {
      \       'defaultAction': 'callback',
      \     },
      \   }
      \ })
<
How to use
>
  let id = denops#callback#register(
      \ {s -> execute(printf('echom "%s"', s), '')},
      \ {'once': v:true})
  call ddu#start({'sources': [
      \  {'name': 'custom-list',
      \   'params': {'texts': ['hello', 'world'], 'callbackId': id}}]})
<
==============================================================================
PARAMS                                           *ddu-source-custom-list-params*

                                            *ddu-source-custom-list-param-texts*
texts (string[])
  Text list to be the source.

                                       *ddu-source-custom-list-param-callbackId*
callbackId (string)
  ID for callback function.
  |denops#callback#register()| returns the callback ID.

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:fdl=0:
